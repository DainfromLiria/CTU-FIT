input {
  file {
    path => "/data/final_data.csv"
    start_position => "beginning"
    sincedb_path => "/dev/null"
  }
}

filter {
  csv {
    separator => ","
    skip_header => true
    columns => ["date","Longitude","Latitude","Number_of_Vehicles","Number_of_Casualties","Day_of_Week","time",
                "Speed_limit","Urban_or_Rural_Area","Did_Police_Officer_Attend_Scene_of_Accident","fatal","geometry","cnt","t1","t2",
                "hum","wind_speed","weather_code","is_holiday","is_weekend","season","time_of_bike_sharing","cloud_cover",
                "sunshine","global_radiation","max_temp","mean_temp","min_temp","precipitation","pressure","snow_depth"]
  }
  
  date {
		match => ["date", "yyyy-MM-dd"]
  }
  date {
		match => ["time", "HH:mm:ss"]
  }
  date {
		match => ["time_of_bike_sharing", "HH:mm:ss"]
  }
  
  mutate {convert => ["Latitude", "float"]}
  mutate {convert => ["Longitude", "float"]}


  mutate {convert => ["Day_of_Week", "integer"]}
  mutate {convert => ["Number_of_Casualties", "integer"]}
  mutate {convert => ["Number_of_Vehicles", "integer"]}
  mutate {convert => ["Did_Police_Officer_Attend_Scene_of_Accident", "integer"]}
  mutate {convert => ["fatal", "integer"]}
  mutate {convert => ["cnt", "integer"]}

  mutate {convert => ["season", "float"]}
  mutate {convert => ["weather_code", "float"]}
  mutate {convert => ["Speed_limit", "float"]}
  mutate {convert => ["t1", "float"]}
  mutate {convert => ["t2", "float"]}
  mutate {convert => ["hum", "float"]}
  mutate {convert => ["wind_speed", "float"]}
  mutate {convert => ["is_holiday", "float"]}
  mutate {convert => ["is_weekend", "float"]}
  mutate {convert => ["cloud_cover", "float"]}
  mutate {convert => ["sunshine", "float"]}
  mutate {convert => ["global_radiation", "float"]}
  mutate {convert => ["max_temp", "float"]}
  mutate {convert => ["mean_temp", "float"]}
  mutate {convert => ["min_temp", "float"]}
  mutate {convert => ["precipitation", "float"]}
  mutate {convert => ["pressure", "float"]}
  mutate {convert => ["snow_depth", "float"]}

  mutate {
    add_field => {
        "location" => "%{Latitude},%{Longitude}"
    }
  }

    
}

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "london"
    template_name => "london_template"
    template_overwrite => true
    manage_template => true
  }

  stdout { codec => rubydebug }
}
